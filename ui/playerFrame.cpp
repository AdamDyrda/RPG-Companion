//
// Created by adame on 6/10/2025.
//

#include "playerFrame.h"

PlayerFrame::PlayerFrame(const wxString &windowTitle, Player *player,const wxFont &mainFont, const wxFont &headlineFont):wxFrame(nullptr,wxID_ANY,windowTitle) {
    this->mainFont= mainFont;
    this->headlineFont = headlineFont;
    this->player = player;
  CreateControls();
    //BindEventHandlers();
    SetupSizers();
    LoadPlayerData();
}


void PlayerFrame::CreateControls() {
    mainWindow = new wxScrolledWindow(this, wxID_ANY);
        mainWindow->SetFont(mainFont);
    mainWindow->SetBackgroundColour(wxColour(143, 185, 150));
    mainWindow->SetForegroundColour(wxColour(17, 29, 19));
    mainWindow->SetScrollRate(wxDefaultCoord, 50);

    auto* nameLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("Name:"));
    nameCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    nameSizer = new wxBoxSizer(wxHORIZONTAL);
    nameSizer->Add(nameLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    nameSizer->Add(nameCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* occupationLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("Occupation:"));
    occupationCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    occupationSizer = new wxBoxSizer(wxHORIZONTAL);
    occupationSizer->Add(occupationLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    occupationSizer->Add(occupationCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* birthplaceLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("Birthplace:"));
    birthplaceCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    birthplaceSizer = new wxBoxSizer(wxHORIZONTAL);
    birthplaceSizer->Add(birthplaceLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    birthplaceSizer->Add(birthplaceCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* residenceLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("Residence:"));
    residenceCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    residenceSizer = new wxBoxSizer(wxHORIZONTAL);
    residenceSizer->Add(residenceLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    residenceSizer->Add(residenceCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* pronounLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("Pronoun:"));
    pronounCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    pronounSizer = new wxBoxSizer(wxHORIZONTAL);
    pronounSizer->Add(pronounLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    pronounSizer->Add(pronounCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* ageLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("Age:"));
    ageCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    ageSizer = new wxBoxSizer(wxHORIZONTAL);
    ageSizer->Add(ageLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    ageSizer->Add(ageCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* strengthLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("Strength:"));
    strengthCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    strengthSizer = new wxBoxSizer(wxHORIZONTAL);
    strengthSizer->Add(strengthLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    strengthSizer->Add(strengthCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* concentrationLabel = new wxStaticText(mainWindow, wxID_ANY,wxT("concentration"));
    concentrationCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    concentrationSizer = new wxBoxSizer(wxHORIZONTAL);
    concentrationSizer->Add(concentrationLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    concentrationSizer->Add(concentrationCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* dexterityLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("dexterity:"));
    dexterityCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    dexteritySizer = new wxBoxSizer(wxHORIZONTAL);
    dexteritySizer->Add(dexterityLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    dexteritySizer->Add(dexterityCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* inteligenceLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("inteligence:"));
    inteligenceCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    inteligenceSizer = new wxBoxSizer(wxHORIZONTAL);
    inteligenceSizer->Add(inteligenceLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    inteligenceSizer->Add(inteligenceCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* sizeLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("size:"));
    sizeCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    sizeSizer = new wxBoxSizer(wxHORIZONTAL);
    sizeSizer->Add(sizeLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    sizeSizer->Add(sizeCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* powerLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("power:"));
    powerCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    powerSizer = new wxBoxSizer(wxHORIZONTAL);
    powerSizer->Add(powerLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    powerSizer->Add(powerCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* appearanceLabel = new wxStaticText(mainWindow,wxID_ANY, wxT("appearance:"));
    appearanceCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    appearanceSizer = new wxBoxSizer(wxHORIZONTAL);
    appearanceSizer->Add(appearanceLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    appearanceSizer->Add(appearanceCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* educationLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("education:"));
    educationCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    educationSizer = new wxBoxSizer(wxHORIZONTAL);
    educationSizer->Add(educationLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    educationSizer->Add(educationCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* hitPointsLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("hitpoints:"));
    hitPointsCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    hitPointsSizer = new wxBoxSizer(wxHORIZONTAL);
    hitPointsSizer->Add(hitPointsLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    hitPointsSizer->Add(hitPointsCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* magicPointsLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("magicpoints:"));
    magicPointsCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    magicPointsSizer = new wxBoxSizer(wxHORIZONTAL);
    magicPointsSizer->Add(magicPointsLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    magicPointsSizer->Add(magicPointsCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* luckPointsLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("luckpoints:"));
    luckPointsCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    luckPointsSizer = new wxBoxSizer(wxHORIZONTAL);
    luckPointsSizer->Add(luckPointsLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    luckPointsSizer->Add(luckPointsCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* luckLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("luck:"));
    luckCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    luckSizer = new wxBoxSizer(wxHORIZONTAL);
    luckSizer->Add(luckLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    luckSizer->Add(luckCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* sanityLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("sanity:"));
    sanityCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    sanitySizer = new wxBoxSizer(wxHORIZONTAL);
    sanitySizer->Add(sanityLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    sanitySizer->Add(sanityCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* accountingLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("accounting:"));
    accountingCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    accountingSizer = new wxBoxSizer(wxHORIZONTAL);
    accountingSizer->Add(accountingLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    accountingSizer->Add(accountingCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* anthropologyLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("anthropology:"));
    anthropologyCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    anthropologySizer = new wxBoxSizer(wxHORIZONTAL);
    anthropologySizer->Add(anthropologyLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    anthropologySizer->Add(anthropologyCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* appraiseLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("appraise:"));
    appraiseCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    appraiseSizer = new wxBoxSizer(wxHORIZONTAL);
    appraiseSizer->Add(appraiseLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    appraiseSizer->Add(appraiseCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* archaeologyLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("archaeology:"));
    archaeologyCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    archaeologySizer = new wxBoxSizer(wxHORIZONTAL);
    archaeologySizer->Add(archaeologyLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    archaeologySizer->Add(archaeologyCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* artLabel= new wxStaticText(mainWindow, wxID_ANY, wxT("art:"));
    artCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    artSizer = new wxBoxSizer(wxHORIZONTAL);
    artSizer->Add(artLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    artSizer->Add(artCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* charmLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("charm:"));
    charmCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    charmSizer = new wxBoxSizer(wxHORIZONTAL);
    charmSizer->Add(charmLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    charmSizer->Add(charmCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* climbLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("climb:"));
    climbCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    climbSizer = new wxBoxSizer(wxHORIZONTAL);
    climbSizer->Add(climbLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    climbSizer->Add(climbCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* creditRatingLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("credit:"));
    creditRatingCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    creditRatingSizer = new wxBoxSizer(wxHORIZONTAL);
    creditRatingSizer->Add(creditRatingLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    creditRatingSizer->Add(creditRatingCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* chtulhuMythosLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("chtulhu:"));
    chtulhuMythosCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    chtulhuMythosSizer = new wxBoxSizer(wxHORIZONTAL);
    chtulhuMythosSizer->Add(chtulhuMythosLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    chtulhuMythosSizer->Add(chtulhuMythosCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* disguiseLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("disguise:"));
    disguiseCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    disguiseSizer = new wxBoxSizer(wxHORIZONTAL);
    disguiseSizer->Add(disguiseLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    disguiseSizer->Add(disguiseCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* dodgeLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("dodge:"));
    dodgeCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    dodgeSizer = new wxBoxSizer(wxHORIZONTAL);
    dodgeSizer->Add(dodgeLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    dodgeSizer->Add(dodgeCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* driveAutoLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("drive:"));
    driveAutoCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    driveAutoSizer = new wxBoxSizer(wxHORIZONTAL);
    driveAutoSizer->Add(driveAutoLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    driveAutoSizer->Add(driveAutoCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* electricalRepairLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("electrical:"));
    electricalRepairCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    electricalRepairSizer = new wxBoxSizer(wxHORIZONTAL);
    electricalRepairSizer->Add(electricalRepairLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    electricalRepairSizer->Add(electricalRepairCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* fastTalkLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("fasttalk:"));
    fastTalkCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    fastTalkSizer = new wxBoxSizer(wxHORIZONTAL);
    fastTalkSizer->Add(fastTalkLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    fastTalkSizer->Add(fastTalkCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* fightingLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("fighting:"));
    fightingCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    fightingSizer = new wxBoxSizer(wxHORIZONTAL);
    fightingSizer->Add(fightingLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    fightingSizer->Add(fightingCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* firearmsHandgunLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("firearm(Handgun):"));
    firearmsHandgunCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    firearmsHandgunSizer = new wxBoxSizer(wxHORIZONTAL);
    firearmsHandgunSizer->Add(firearmsHandgunLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    firearmsHandgunSizer->Add(firearmsHandgunCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* firearmsRifleLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("firearms:"));
    firearmsRifleCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    firearmsRifleSizer = new wxBoxSizer(wxHORIZONTAL);
    firearmsRifleSizer->Add(firearmsRifleLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    firearmsRifleSizer->Add(firearmsRifleCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* firstAidLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("firstAid:"));
    firstAidCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    firstAidSizer = new wxBoxSizer(wxHORIZONTAL);
    firstAidSizer->Add(firstAidLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    firstAidSizer->Add(firstAidCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* historyLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("history:"));
    historyCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    historySizer = new wxBoxSizer(wxHORIZONTAL);
    historySizer->Add(historyLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    historySizer->Add(historyCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* intimidateLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("intime:"));
    intimidateCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    intimidateSizer = new wxBoxSizer(wxHORIZONTAL);
    intimidateSizer->Add(intimidateLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    intimidateSizer->Add(intimidateCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* jumpLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("jump:"));
    jumpCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    jumpSizer = new wxBoxSizer(wxHORIZONTAL);
    jumpSizer->Add(jumpLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    jumpSizer->Add(jumpCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* languageOtherLabel = new wxStaticText(mainWindow, wxID_ANY,wxT("Language(Other):"));
    languageOtherCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    languageOtherSizer = new wxBoxSizer(wxHORIZONTAL);
    languageOtherSizer->Add(languageOtherLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    languageOtherSizer->Add(languageOtherCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* languageOwnLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("Language(Other):"));
    languageOwnCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    languageOwnSizer = new wxBoxSizer(wxHORIZONTAL);
    languageOwnSizer->Add(languageOwnLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    languageOwnSizer->Add(languageOwnCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* lawLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("Law:"));
    lawCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    lawSizer = new wxBoxSizer(wxHORIZONTAL);
    lawSizer->Add(lawLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    lawSizer->Add(lawCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* libraryUseLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("libraryLabel:"));
    libraryUseCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    libraryUseSizer = new wxBoxSizer(wxHORIZONTAL);
    libraryUseSizer->Add(libraryUseLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    libraryUseSizer->Add(libraryUseCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* listenLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("listen:"));
    listenCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    listenSizer = new wxBoxSizer(wxHORIZONTAL);
    listenSizer->Add(listenLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    listenSizer->Add(listenCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* locksmithLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("locksmith:"));
    locksmithCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    locksmithSizer = new wxBoxSizer(wxHORIZONTAL);
    locksmithSizer->Add(locksmithLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    locksmithSizer->Add(locksmithCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* mechanicalRepairLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("mechanical repair:"));
    mechanicalRepairCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    mechanicalRepairSizer = new wxBoxSizer(wxHORIZONTAL);
    mechanicalRepairSizer->Add(mechanicalRepairLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    mechanicalRepairSizer->Add(mechanicalRepairCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* medicineLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("medicine:"));
    medicineCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    medicineSizer = new wxBoxSizer(wxHORIZONTAL);
    medicineSizer->Add(medicineLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    medicineSizer->Add(medicineCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* naturalWorldLabel = new wxStaticText(mainWindow, wxID_ANY,wxT("naturalWorld:"));
    naturalWorldCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    naturalWorldSizer = new wxBoxSizer(wxHORIZONTAL);
    naturalWorldSizer->Add(naturalWorldLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    naturalWorldSizer->Add(naturalWorldCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* navigateLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("navigatelabel:"));
    navigateCtrl= new wxTextCtrl(mainWindow, wxID_ANY);
    navigateSizer = new wxBoxSizer(wxHORIZONTAL);
    navigateSizer->Add(navigateLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    navigateSizer->Add(navigateCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* ocultLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("ocult:"));
    occultCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    occultSizer = new wxBoxSizer(wxHORIZONTAL);
    occultSizer->Add(ocultLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    occultSizer->Add(occultCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* persuadeLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("persuade:"));
    persuadeCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    persuadeSizer = new wxBoxSizer(wxHORIZONTAL);
    persuadeSizer->Add(persuadeLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    persuadeSizer->Add(persuadeCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* pilotLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("pilot:"));
    pilotCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    pilotSizer = new wxBoxSizer(wxHORIZONTAL);
    pilotSizer->Add(pilotLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    pilotSizer->Add(pilotCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* psychoanalysisLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("psychoanalysis:"));
    psychoanalysisCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    psychoanalysisSizer = new wxBoxSizer(wxHORIZONTAL);
    psychoanalysisSizer->Add(psychoanalysisLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    psychoanalysisSizer->Add(psychoanalysisCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* psychologyLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("psychology:"));
    psychologyCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    psychologySizer = new wxBoxSizer(wxHORIZONTAL);
    psychologySizer->Add(psychologyLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    psychologySizer->Add(psychologyCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* rideLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("ride:"));
    rideCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    rideSizer = new wxBoxSizer(wxHORIZONTAL);
    rideSizer->Add(rideLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    rideSizer->Add(rideCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* sicenceLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("sicence:"));
    scienceCtrl= new wxTextCtrl(mainWindow, wxID_ANY);
    scienceSizer = new wxBoxSizer(wxHORIZONTAL);
    scienceSizer->Add(sicenceLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    scienceSizer->Add(scienceCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* sleightOfHandLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("sleightOfHand:"));
    sleightOfHandCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    sleightOfHandSizer = new wxBoxSizer(wxHORIZONTAL);
    sleightOfHandSizer->Add(sleightOfHandLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    sleightOfHandSizer->Add(sleightOfHandCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* spotHiddenLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("spotHidden:"));
    spotHiddenCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    spotHiddenSizer = new wxBoxSizer(wxHORIZONTAL);
    spotHiddenSizer->Add(spotHiddenLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    spotHiddenSizer->Add(spotHiddenCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* stealthLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("stealth:"));
    stealthCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    stealthSizer = new wxBoxSizer(wxHORIZONTAL);
    stealthSizer->Add(stealthLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    stealthSizer->Add(stealthCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* survivalLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("survival:"));
    survivalCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    survivalSizer = new wxBoxSizer(wxHORIZONTAL);
    survivalSizer->Add(survivalLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    survivalSizer->Add(survivalCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* swimLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("swim:"));
    swimCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    swimSizer = new wxBoxSizer(wxHORIZONTAL);
    swimSizer->Add(swimLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    swimSizer->Add(swimCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* throwingLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("throwing:"));
    throwingCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    throwingSizer = new wxBoxSizer(wxHORIZONTAL);
    throwingSizer->Add(throwingLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    throwingSizer->Add(throwingCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    auto* trackLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("track:"));
    trackCtrl = new wxTextCtrl(mainWindow, wxID_ANY);
    trackSizer = new wxBoxSizer(wxHORIZONTAL);
    trackSizer->Add(trackLabel, 0, wxALL | wxALIGN_CENTER_VERTICAL, 5);
    trackSizer->Add(trackCtrl, 1, wxALL | wxALIGN_CENTER_VERTICAL, 5);








}
void PlayerFrame::BindEventHandlers() {
    // Bind any necessary event handlers here
}
void PlayerFrame::SetupSizers() {
    mainSizer = new wxBoxSizer(wxVERTICAL);
    auto* infoLabel = new wxStaticText(mainWindow, wxID_ANY, wxT("Player Information"));
    infoLabel->SetFont(headlineFont);
    mainSizer->Add(infoLabel, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 10);
    mainSizer->Add(nameSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(occupationSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(birthplaceSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(residenceSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(pronounSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(ageSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(strengthSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(concentrationSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(dexteritySizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(inteligenceSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(sizeSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(powerSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(appearanceSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(educationSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(hitPointsSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(magicPointsSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(luckPointsSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(luckSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(sanitySizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(accountingSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(anthropologySizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(appraiseSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(archaeologySizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(artSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(charmSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(climbSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(creditRatingSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(chtulhuMythosSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(disguiseSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(dodgeSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(driveAutoSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(electricalRepairSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(fastTalkSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(fightingSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(firearmsHandgunSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(firearmsRifleSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(firstAidSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(historySizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(intimidateSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(jumpSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(languageOtherSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(languageOwnSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(lawSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(libraryUseSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(listenSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(locksmithSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(mechanicalRepairSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(medicineSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(naturalWorldSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(navigateSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(occultSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(persuadeSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(pilotSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(psychoanalysisSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(psychologySizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(rideSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(scienceSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(sleightOfHandSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(spotHiddenSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(stealthSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(survivalSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(swimSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(throwingSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);
    mainSizer->Add(trackSizer, 0, wxALIGN_CENTER_HORIZONTAL | wxALL, 5);



    mainWindow->SetSizerAndFit(mainSizer);
    mainWindow->Layout();
}

void PlayerFrame::LoadPlayerData() {
    nameCtrl->SetValue(player->GetName());
    occupationCtrl->SetValue(player->GetOccupation());
    birthplaceCtrl->SetValue(player->GetBirthplace());
    residenceCtrl->SetValue(player->GetResistance());
    pronounCtrl->SetValue(player->GetPronoun());
    ageCtrl->SetValue(wxString::Format(wxT("%d"), player->GetAge()));
    strengthCtrl->SetValue(wxString::Format(wxT("%d"), player->GetStrength()));
    concentrationCtrl->SetValue(wxString::Format(wxT("%d"), player->GetConcentration()));
    dexterityCtrl->SetValue(wxString::Format(wxT("%d"), player->GetDexterity()));
    inteligenceCtrl->SetValue(wxString::Format(wxT("%d"), player->GetIntelligence()));
    sizeCtrl->SetValue(wxString::Format(wxT("%d"), player->GetSize()));
    powerCtrl->SetValue(wxString::Format(wxT("%d"), player->GetPower()));
    appearanceCtrl->SetValue(wxString::Format(wxT("%d"), player->GetAppearance()));
    educationCtrl->SetValue(wxString::Format(wxT("%d"), player->GetEducation()));
    hitPointsCtrl->SetValue(wxString::Format(wxT("%d"), player->GetHitPoints()));
    magicPointsCtrl->SetValue(wxString::Format(wxT("%d"), player->GetMagicPoints()));
    luckPointsCtrl->SetValue(wxString::Format(wxT("%d"), player->GetLuckPoints()));
    luckCtrl->SetValue(wxString::Format(wxT("%d"), player->GetLuck()));
    sanityCtrl->SetValue(wxString::Format(wxT("%d"), player->GetSanity()));
    accountingCtrl->SetValue(wxString::Format(wxT("%d"), player->GetAccounting()));
    anthropologyCtrl->SetValue(wxString::Format(wxT("%d"), player->GetAnthropology()));
    appraiseCtrl->SetValue(wxString::Format(wxT("%d"), player->GetApprise()));
    archaeologyCtrl->SetValue(wxString::Format(wxT("%d"), player->GetArchaeology()));
    artCtrl->SetValue(wxString::Format(wxT("%d"), player->GetArt()));
    charmCtrl->SetValue(wxString::Format(wxT("%d"), player->GetCharm()));
    climbCtrl->SetValue(wxString::Format(wxT("%d"), player->GetClimb()));
    creditRatingCtrl->SetValue(wxString::Format(wxT("%d"), player->GetCreditRating()));
    chtulhuMythosCtrl->SetValue(wxString::Format(wxT("%d"), player->GetCtulhuMythos()));
    disguiseCtrl->SetValue(wxString::Format(wxT("%d"), player->GetDisguise()));
    dodgeCtrl->SetValue(wxString::Format(wxT("%d"), player->GetDodge()));
    driveAutoCtrl->SetValue(wxString::Format(wxT("%d"), player->GetDriveAuto()));
    electricalRepairCtrl->SetValue(wxString::Format(wxT("%d"), player->GetElectricalRepair()));
    fastTalkCtrl->SetValue(wxString::Format(wxT("%d"), player->GetFastTalk()));
    fightingCtrl->SetValue(wxString::Format(wxT("%d"), player->GetFighting()));
    firearmsHandgunCtrl->SetValue(wxString::Format(wxT("%d"), player->GetFirearmsHandgun()));
    firearmsRifleCtrl->SetValue(wxString::Format(wxT("%d"), player->GetFirearmsRifle()));
    firstAidCtrl->SetValue(wxString::Format(wxT("%d"), player->GetFirstAid()));
    historyCtrl->SetValue(wxString::Format(wxT("%d"), player->GetHistory()));
    intimidateCtrl->SetValue(wxString::Format(wxT("%d"), player->GetIntimidate()));
    jumpCtrl->SetValue(wxString::Format(wxT("%d"), player->GetJump()));
    languageOtherCtrl->SetValue(wxString::Format(wxT("%d"), player->GetLanguageOther()));
    languageOwnCtrl->SetValue(wxString::Format(wxT("%d"), player->GetLanguageOwn()));
    lawCtrl->SetValue(wxString::Format(wxT("%d"), player->GetLaw()));
    libraryUseCtrl->SetValue(wxString::Format(wxT("%d"), player->GetLibraryUse()));
    listenCtrl->SetValue(wxString::Format(wxT("%d"), player->GetListen()));
    locksmithCtrl->SetValue(wxString::Format(wxT("%d"), player->GetLocksmith()));
    mechanicalRepairCtrl->SetValue(wxString::Format(wxT("%d"), player->GetMechanicalRepair()));
    medicineCtrl->SetValue(wxString::Format(wxT("%d"), player->GetMedicine()));
    naturalWorldCtrl->SetValue(wxString::Format(wxT("%d"), player->GetNaturalWorld()));
    navigateCtrl->SetValue(wxString::Format(wxT("%d"), player->GetNavigate()));
    occultCtrl->SetValue(wxString::Format(wxT("%d"), player->GetOccult()));
    persuadeCtrl->SetValue(wxString::Format(wxT("%d"), player->GetPersuade()));
    pilotCtrl->SetValue(wxString::Format(wxT("%d"), player->GetPilot()));
    psychoanalysisCtrl->SetValue(wxString::Format(wxT("%d"), player->GetPsychoanalysis()));
    psychologyCtrl->SetValue(wxString::Format(wxT("%d"), player->GetPsychology()));
    rideCtrl->SetValue(wxString::Format(wxT("%d"), player->GetRide()));
    scienceCtrl->SetValue(wxString::Format(wxT("%d"), player->GetScience()));
    sleightOfHandCtrl->SetValue(wxString::Format(wxT("%d"), player->GetSleightOfHand()));
    spotHiddenCtrl->SetValue(wxString::Format(wxT("%d"), player->GetSpotHidden()));
    stealthCtrl->SetValue(wxString::Format(wxT("%d"), player->GetStealth()));
    survivalCtrl->SetValue(wxString::Format(wxT("%d"), player->GetSurvival()));
    swimCtrl->SetValue(wxString::Format(wxT("%d"), player->GetSwim()));
    throwingCtrl->SetValue(wxString::Format(wxT("%d"), player->GetThrowing()));
    trackCtrl->SetValue(wxString::Format(wxT("%d"), player->GetTrack()));
}
void PlayerFrame::OnClose(wxCloseEvent &event) {

    event.Skip();
}